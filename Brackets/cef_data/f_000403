[
    {
        "domain": "base",
        "version": {
            "major": 0,
            "minor": 1
        },
        "commands": [
            {
                "name": "enableDebugger",
                "description": "Attempt to enable the debugger",
                "parameters": [],
                "returns": []
            },
            {
                "name": "restartNode",
                "description": "Attempt to restart the Node server",
                "parameters": [],
                "returns": []
            },
            {
                "name": "loadDomainModulesFromPaths",
                "description": "Attempt to load command modules from the given paths. The paths should be absolute.",
                "parameters": [
                    {
                        "name": "paths",
                        "type": "array<string>"
                    }
                ],
                "returns": [
                    {
                        "name": "success",
                        "type": "boolean"
                    }
                ]
            }
        ],
        "events": [
            {
                "name": "log",
                "parameters": [
                    {
                        "name": "level",
                        "type": "string"
                    },
                    {
                        "name": "timestamp",
                        "type": "Date"
                    },
                    {
                        "name": "message",
                        "type": "string"
                    }
                ]
            },
            {
                "name": "newDomains",
                "parameters": []
            }
        ]
    },
    {
        "domain": "FindInFiles",
        "version": {
            "major": 0,
            "minor": 1
        },
        "commands": [
            {
                "name": "doSearch",
                "description": "Searches in project files and returns matches",
                "parameters": [
                    {
                        "name": "searchObject",
                        "type": "object",
                        "description": "Object containing search data"
                    }
                ],
                "returns": [
                    {
                        "name": "searchResults",
                        "type": "object",
                        "description": "Object containing results of the search"
                    }
                ]
            },
            {
                "name": "nextPage",
                "description": "get the next page of reults",
                "parameters": [],
                "returns": [
                    {
                        "name": "searchResults",
                        "type": "object",
                        "description": "Object containing results of the search"
                    }
                ]
            },
            {
                "name": "getAllResults",
                "description": "get the next page of reults",
                "parameters": [],
                "returns": [
                    {
                        "name": "searchResults",
                        "type": "object",
                        "description": "Object containing all results of the search"
                    }
                ]
            },
            {
                "name": "collapseResults",
                "description": "get the next page of reults",
                "parameters": [
                    {
                        "name": "collapse",
                        "type": "boolean",
                        "description": "true to collapse"
                    }
                ],
                "returns": []
            },
            {
                "name": "filesChanged",
                "description": "files in the project has been changed, update cache",
                "parameters": [
                    {
                        "name": "updateObject",
                        "type": "object",
                        "description": "Object containing list of changed files"
                    }
                ],
                "returns": []
            },
            {
                "name": "documentChanged",
                "description": "informs that the document changed and updates the cache",
                "parameters": [
                    {
                        "name": "updateObject",
                        "type": "object",
                        "description": "update with the contents of the object"
                    }
                ],
                "returns": []
            },
            {
                "name": "filesRemoved",
                "description": "Searches in project files and returns matches",
                "parameters": [
                    {
                        "name": "updateObject",
                        "type": "object",
                        "description": "Object containing list of removed files"
                    }
                ],
                "returns": []
            },
            {
                "name": "initCache",
                "description": "Caches the project for find in files in node",
                "parameters": [
                    {
                        "name": "fileList",
                        "type": "Array",
                        "description": "List of all project files - Path only"
                    }
                ],
                "returns": []
            }
        ],
        "events": [
            {
                "name": "crawlComplete",
                "parameters": [
                    {
                        "name": "numFiles",
                        "type": "number",
                        "description": "number of files cached"
                    },
                    {
                        "name": "cacheSize",
                        "type": "number",
                        "description": "The size of the file cache epressesd as string length of files"
                    }
                ]
            }
        ]
    },
    {
        "domain": "zaggino.brackets-eslint",
        "version": {
            "major": 0,
            "minor": 1
        },
        "commands": [
            {
                "name": "lintFile",
                "description": "lint given file with eslint",
                "parameters": [
                    {
                        "name": "projectRoot",
                        "type": "string"
                    },
                    {
                        "name": "fullPath",
                        "type": "string"
                    },
                    {
                        "name": "text",
                        "type": "string"
                    },
                    {
                        "name": "useLocalESLint",
                        "type": "boolean"
                    }
                ],
                "returns": [
                    {
                        "name": "report",
                        "type": "object"
                    }
                ]
            },
            {
                "name": "fixFile",
                "description": "Fixes the current file using the ESLint auto-fixing feature",
                "parameters": [
                    {
                        "name": "projectRoot",
                        "type": "string"
                    },
                    {
                        "name": "fullPath",
                        "type": "string"
                    },
                    {
                        "name": "text",
                        "type": "string"
                    }
                ]
            }
        ],
        "events": []
    },
    {
        "domain": "TernNodeDomain",
        "version": {
            "major": 0,
            "minor": 1
        },
        "commands": [
            {
                "name": "invokeTernCommand",
                "description": "Invokes a tern command on node",
                "parameters": [
                    {
                        "name": "commandConfig",
                        "type": "object",
                        "description": "Object containing tern command configuration"
                    }
                ]
            },
            {
                "name": "setInterface",
                "description": "Sets the shared message interface",
                "parameters": [
                    {
                        "name": "msgInterface",
                        "type": "object",
                        "description": "Object containing messageId enums"
                    }
                ]
            },
            {
                "name": "resetTernServer",
                "description": "Resets an existing tern server"
            }
        ],
        "events": [
            {
                "name": "data",
                "parameters": [
                    {
                        "name": "data",
                        "type": "Object",
                        "description": "data to be returned to main thread"
                    }
                ]
            }
        ]
    },
    {
        "domain": "nodeSocketTransport",
        "version": {
            "major": 0,
            "minor": 1
        },
        "commands": [
            {
                "name": "start",
                "description": "Creates the WS server",
                "parameters": []
            },
            {
                "name": "send",
                "description": "Sends a message to a given client or list of clients",
                "parameters": [
                    {
                        "name": "idOrArray",
                        "type": "number|Array.<number>",
                        "description": "id or array of ids to send the message to"
                    },
                    {
                        "name": "message",
                        "type": "string",
                        "description": "JSON message to send"
                    }
                ],
                "returns": []
            },
            {
                "name": "close",
                "description": "Closes the connection to a given client",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number",
                        "description": "id of connection to close"
                    }
                ],
                "returns": []
            }
        ],
        "events": [
            {
                "name": "connect",
                "parameters": [
                    {
                        "name": "clientID",
                        "type": "number",
                        "description": "ID of live preview page connecting to live development"
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "description": "URL of page that live preview is connecting from"
                    }
                ]
            },
            {
                "name": "message",
                "parameters": [
                    {
                        "name": "clientID",
                        "type": "number",
                        "description": "ID of live preview page sending message"
                    },
                    {
                        "name": "msg",
                        "type": "string",
                        "description": "JSON message from client page"
                    }
                ]
            },
            {
                "name": "close",
                "parameters": [
                    {
                        "name": "clientID",
                        "type": "number",
                        "description": "ID of live preview page being closed"
                    }
                ]
            }
        ]
    },
    {
        "domain": "launcher",
        "version": {
            "major": 0,
            "minor": 1
        },
        "commands": [
            {
                "name": "launch",
                "description": "Launches a given HTML file in the browser for live development",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string",
                        "description": "file:// url to the HTML file"
                    },
                    {
                        "name": "browser",
                        "type": "string",
                        "description": "browser name"
                    }
                ],
                "returns": []
            }
        ],
        "events": []
    },
    {
        "domain": "sass",
        "version": {
            "major": 0,
            "minor": 1
        },
        "commands": [],
        "events": []
    },
    {
        "domain": "sass-v2.0.3",
        "version": null,
        "commands": [
            {
                "name": "render",
                "description": "Returns the path to an application",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "includePaths",
                        "type": "array"
                    },
                    {
                        "name": "imagePath",
                        "type": "string"
                    },
                    {
                        "name": "outputStyle",
                        "type": "string"
                    },
                    {
                        "name": "sourceComments",
                        "type": "boolean"
                    },
                    {
                        "name": "sourceMap",
                        "type": "string"
                    },
                    {
                        "name": "compiler",
                        "type": "string"
                    },
                    {
                        "name": "compass",
                        "type": "boolean"
                    }
                ]
            },
            {
                "name": "preview",
                "description": "Returns the path to an application",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "inMemoryFiles",
                        "type": "object"
                    },
                    {
                        "name": "includePaths",
                        "type": "array"
                    },
                    {
                        "name": "imagePath",
                        "type": "string"
                    },
                    {
                        "name": "outputStyle",
                        "type": "string"
                    },
                    {
                        "name": "sourceComments",
                        "type": "boolean"
                    },
                    {
                        "name": "sourceMap",
                        "type": "string"
                    },
                    {
                        "name": "compiler",
                        "type": "string"
                    },
                    {
                        "name": "compass",
                        "type": "boolean"
                    }
                ]
            },
            {
                "name": "deleteTempFiles",
                "description": "Delete temporary files used for Live Preview",
                "parameters": []
            },
            {
                "name": "mkdirp",
                "description": "Creates a directory. If the parent hierarchy doesn't exist, it's created. Like mkdir -p.",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ]
            },
            {
                "name": "setCompilerTimeout",
                "description": "Defines a compiler timeout",
                "parameters": [
                    {
                        "name": "timeout",
                        "type": "number"
                    }
                ]
            },
            {
                "name": "setTempDir",
                "description": "Set the temporary directory used for in-memory compiling",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ]
            },
            {
                "name": "killProcess",
                "description": "Kill the compiler process",
                "parameters": []
            }
        ],
        "events": []
    }
]